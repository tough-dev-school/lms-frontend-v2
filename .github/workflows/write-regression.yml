name: Update regression

on:
  issue_comment:
    types: [created]

jobs:
  update-regression:
    if: ${{ github.event.issue.pull_request && contains(github.event.comment.body, '/regression') }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v3
        id: get-pr
        with:
          script: |
            const request = {
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number
            }
            core.info(`Getting PR #${request.pull_number} from ${request.owner}/${request.repo}`)
            try {
              const result = await github.pulls.get(request)
              return result.data
            } catch (err) {
              core.setFailed(`Request failed with error ${err}`)
            }

      - uses: actions/checkout@v2
        with:
          repository: ${{ fromJSON(steps.get-pr.outputs.result).head.repo.full_name }}
          ref: ${{ fromJSON(steps.get-pr.outputs.result).head.sha }}

      - name: Setup node env 🏗
        uses: actions/setup-node@v3
        with:
          node-version-file: '.node-version'

      - name: Restore cache
        uses: actions/cache@v3
        id: cache
        with:
          path: node_modules
          key: ${{ runner.os }}-v1-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('.node-version') }}

      - name: Install dependencies 👨🏻‍💻
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci --no-audit --include=dev

      - name: Install playwright browsers 😈
        run: npx playwright install

      - name: Updating light mode screenshots 🌞
        env:
          COLOR_SCHEME: light
        run: npm run test:visual:update

      - name: Updating dark mode screenshots 🌚
        env:
          COLOR_SCHEME: dark
        run: npm run test:visual:update

      - name: Creating branch with updates 🦑
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: Update screenshots
          branch: ${{ fromJSON(steps.get-pr.outputs.result).head.ref }}
          file_pattern: '*.png'
