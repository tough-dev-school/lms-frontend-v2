name: Update regression

on:
  issue_comment:
    types: [created]

jobs:
  update-regression:
    if: ${{ github.event.issue.pull_request && contains(github.event.comment.body, '/regression') }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v3
        id: get-pr
        with:
          script: |
            const request = {
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number
            }
            core.info(`Getting PR #${request.pull_number} from ${request.owner}/${request.repo}`)
            try {
              const result = await github.pulls.get(request)
              return result.data
            } catch (err) {
              core.setFailed(`Request failed with error ${err}`)
            }

      - uses: actions/checkout@v4
        with:
          repository: ${{ fromJSON(steps.get-pr.outputs.result).head.repo.full_name }}
          ref: ${{ fromJSON(steps.get-pr.outputs.result).head.sha }}

      - uses: pnpm/action-setup@v3
        with:
          version: latest

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.node-version'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Install playwright browsers ðŸ˜ˆ
        run: npx playwright install

      - name: Updating light mode screenshots ðŸŒž
        env:
          COLOR_SCHEME: light
        run: pnpm run test:visual:update

      - name: Creating branch with updates ðŸ¦‘
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: Update screenshots
          branch: ${{ fromJSON(steps.get-pr.outputs.result).head.ref }}
          file_pattern: '*.png'
          commit_options: '--no-verify'
